// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/containers": {
            "post": {
                "description": "Create a new container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Create a new container",
                "parameters": [
                    {
                        "description": "Container object that needs to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ContainerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            }
        },
        "/containers/all": {
            "get": {
                "description": "Get all containers info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Get all containers info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContainersInfoResponse"
                            }
                        }
                    }
                }
            }
        },
        "/containers/{Name}": {
            "delete": {
                "description": "Delete a container by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Delete a container by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Container Name",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            }
        },
        "/containers/{id}": {
            "get": {
                "description": "Get a container by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Get a container by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Container ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Container"
                        }
                    }
                }
            }
        },
        "/publisher": {
            "post": {
                "description": "Create a new publish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Create a new publish",
                "parameters": [
                    {
                        "description": "Publish object that needs to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PublishRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            }
        },
        "/publisher/all": {
            "get": {
                "description": "Get all publisher",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Get all publisher",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PublishResponse"
                            }
                        }
                    }
                }
            }
        },
        "/publisher/historic": {
            "get": {
                "description": "Get a publish by TopicName",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Get a publish by TopicName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic Name",
                        "name": "TopicName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PublishResponse"
                            }
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "Get a session by ClientId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get a session by ClientId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ClientId",
                        "name": "ClientId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SessionResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a session by ClientId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Update a session by ClientId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ClientId",
                        "name": "ClientId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated session object",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SessionUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Create a new session",
                "parameters": [
                    {
                        "description": "Session object that needs to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SessionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SessionRequest"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a session ClientId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Delete a session ClientId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ClientId",
                        "name": "ClientId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            }
        },
        "/sessions/all": {
            "get": {
                "description": "Get all sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Get all sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Session"
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "Get all subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get all subscriptions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Subscription"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create a new subscription",
                "parameters": [
                    {
                        "description": "Subscription object that needs to be added",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "description": "Get a subscription by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Get a subscription by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a subscription by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update a subscription by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated subscription object",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SubscriptionRequest"
                        }
                    }
                }
            }
        },
        "/topics": {
            "get": {
                "description": "Get Topic by Name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Topic"
                ],
                "summary": "Get Topic by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic by Name",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Topic"
                        }
                    }
                }
            }
        },
        "/topics/all": {
            "get": {
                "description": "Get all topics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Topic"
                ],
                "summary": "Get all topics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Topic"
                            }
                        }
                    }
                }
            }
        },
        "/topics/{Name}": {
            "delete": {
                "description": "Delete a topic by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Topic"
                ],
                "summary": "Delete a topic by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Topic Name",
                        "name": "Name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.GenericResponse"
                        }
                    }
                }
            }
        },
        "/topics/{id}": {
            "get": {
                "description": "Get a topic by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Topic"
                ],
                "summary": "Get a topic by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Topic"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a topic by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Topic"
                ],
                "summary": "Update a topic by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Topic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated topic object",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TopicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TopicRequest"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Container": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ContainerRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ContainersInfoResponse": {
            "type": "object",
            "properties": {
                "countPublishers": {
                    "type": "integer"
                },
                "countSession": {
                    "type": "integer"
                },
                "countSubscribers": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.GenericResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                }
            }
        },
        "models.Publish": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "idSession": {
                    "type": "integer"
                },
                "payload": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/models.Session"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "topicName": {
                    "type": "string"
                }
            }
        },
        "models.PublishRequest": {
            "type": "object",
            "properties": {
                "idSession": {
                    "type": "integer"
                },
                "payload": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "topicName": {
                    "type": "string"
                },
                "topicRetained": {
                    "description": "Indica se a mensagem é retida ou não",
                    "type": "boolean"
                }
            }
        },
        "models.PublishResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "numberTimestamp": {
                    "type": "integer"
                },
                "payload": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/models.SessionInfoResponse"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "topicName": {
                    "type": "string"
                },
                "topicRetained": {
                    "description": "Indica se a mensagem é retida ou não",
                    "type": "boolean"
                }
            }
        },
        "models.Session": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "container": {
                    "$ref": "#/definitions/models.Container"
                },
                "created": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "idContainer": {
                    "type": "integer"
                },
                "keepAlive": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updated": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SessionInfoResponse": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "container": {
                    "$ref": "#/definitions/models.Container"
                },
                "id": {
                    "type": "integer"
                },
                "keepAlive": {
                    "type": "integer"
                }
            }
        },
        "models.SessionRequest": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "idContainer": {
                    "type": "integer"
                },
                "keepAlive": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SessionResponse": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "clientId": {
                    "type": "string"
                },
                "container": {
                    "$ref": "#/definitions/models.Container"
                },
                "created": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "keepAlive": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updated": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.SessionUpdateRequest": {
            "type": "object",
            "properties": {
                "clean": {
                    "type": "boolean"
                },
                "idContainer": {
                    "type": "integer"
                },
                "keepAlive": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "idSession": {
                    "type": "integer"
                },
                "idTopic": {
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/models.Session"
                },
                "topic": {
                    "$ref": "#/definitions/models.Topic"
                },
                "updated": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                }
            }
        },
        "models.SubscriptionRequest": {
            "type": "object",
            "properties": {
                "idSession": {
                    "type": "integer"
                },
                "idTopic": {
                    "type": "integer"
                }
            }
        },
        "models.Topic": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                },
                "id": {
                    "type": "integer"
                },
                "idPublish": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publish": {
                    "$ref": "#/definitions/models.Publish"
                },
                "retained": {
                    "description": "Indica se a mensagem é retida ou não",
                    "type": "boolean"
                },
                "updated": {
                    "type": "string",
                    "example": "2024-01-16T12:00:00Z"
                }
            }
        },
        "models.TopicRequest": {
            "type": "object",
            "properties": {
                "idPublish": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
